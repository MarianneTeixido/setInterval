export interface Streaming {
	init: Function
	startStreaming: CustomEvent
	engine?:any
}
declare global {
	interface Window{ player : any;}
}

declare const p2pml: any;
declare const Clappr 

export const Streaming:Streaming = {
	init: function(){
        if (p2pml.hlsjs.Engine.isSupported()) {
		let engine = new p2pml.hlsjs.Engine();

		let streamingCont = document.createElement('div');
		streamingCont.id = "streaming-main"
		document.body.appendChild(streamingCont)

		let videoSrc = "http://127.0.0.1:8000/live/test/index.m3u8"
		
		let player = new Clappr.Player({
			source: videoSrc,
			mute: false,
			autoPlay: false,
			playback: {
				hlsjsConfig: {
					liveSyncDurationCount: 7,
					loader: engine.createLoaderClass()
				}
			},
			events: {
				onError: function(e) {
					window.setTimeout(()=>	retry(),500)
				}
			}
		});


		function retry(){
			console.debug("retrying...")
			player.configure(player.options)
			player.play();
		
		}

		window.document.body.addEventListener("click",function(){
			player.play()
		})

		window.player = player
		player.attachTo(streamingCont)
		p2pml.hlsjs.initClapprPlayer(player);
	}

	},
	startStreaming: new CustomEvent("startStreaming",{detail: { id: ""}})
}

